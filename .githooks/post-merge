#!/bin/bash
#Script powered by net4ideas.com

# Get the current branch name
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# Check if the current branch is master
if [ "$CURRENT_BRANCH" == "master" ]; then
    echo "Post merge on master -- incrementing the patch version"

    # File to store the version
    FILE="version.txt"

    # Check if the file exists
    if [ -f $FILE ]; then
        # Read the current version from the file
        VERSION=$(cat $FILE)

        # Split version into major, minor, patch
        IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}

        # Increment the patch version
        PATCH=$((PATCH + 1))

        # Update the version string
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"

        # Write the new version back to the file
        echo $NEW_VERSION > $FILE

        echo "Version updated to $NEW_VERSION"
    else
        # If the file doesn't exist, create it with a default version
        echo "0.0.1" > $FILE
        echo "Created version.txt with initial version 0.0.1"
    fi
else
    echo "Not on master branch. Version increment not performed."
fi